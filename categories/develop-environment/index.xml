<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Develop Environment on Kourtney's Blog</title><link>https://klee1611.github.io/categories/develop-environment/</link><description>Recent content in Develop Environment on Kourtney's Blog</description><generator>Hugo</generator><language>en</language><managingEditor>kourtneylee1611@gmail.com (Kourtney Lee)</managingEditor><webMaster>kourtneylee1611@gmail.com (Kourtney Lee)</webMaster><lastBuildDate>Fri, 31 Oct 2025 16:17:18 +0800</lastBuildDate><atom:link href="https://klee1611.github.io/categories/develop-environment/index.xml" rel="self" type="application/rss+xml"/><item><title>Managing Pre-existing Global NPM Packages After Installing NVM</title><link>https://klee1611.github.io/posts/managing-pre-exist-global-npm-packages-after-installing-nvm.html/</link><pubDate>Sat, 06 Nov 2021 19:31:32 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/managing-pre-exist-global-npm-packages-after-installing-nvm.html/</guid><description>&lt;p&gt;Today I encountered a problem:&lt;/p&gt;
&lt;p&gt;After installing &lt;code&gt;nvm&lt;/code&gt;, the path for installing global packages changed,&lt;/p&gt;
&lt;p&gt;making it impossible to directly remove previously installed global packages using &lt;code&gt;npm uninstall -g&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;How did I discover this?&lt;/p&gt;
&lt;p&gt;A long time ago, I installed a global package that could be executed directly from the terminal using a command.&lt;/p&gt;
&lt;p&gt;But because it was so long ago,&lt;/p&gt;
&lt;p&gt;when I tried to upgrade that package, I found it wasn&amp;rsquo;t listed in &lt;code&gt;npm list -g&lt;/code&gt;.&lt;/p&gt;</description></item><item><title>Pyenv Notes</title><link>https://klee1611.github.io/posts/pyenv-notes.html/</link><pubDate>Mon, 01 Nov 2021 18:48:33 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/pyenv-notes.html/</guid><description>&lt;h3 id="functions-and-reasons-for-using-pyenv"&gt;Functions and Reasons for Using &lt;code&gt;pyenv&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pyenv&lt;/code&gt; is a tool used to install various versions of Python on a system,&lt;/p&gt;
&lt;p&gt;and to conveniently switch between Python versions.&lt;/p&gt;
&lt;p&gt;When you need to develop or maintain projects that require different Python versions simultaneously,&lt;/p&gt;
&lt;p&gt;you will need to use &lt;code&gt;pyenv&lt;/code&gt; to help switch Python versions.&lt;/p&gt;
&lt;p&gt;New Python versions usually include syntax updates or new features.&lt;/p&gt;
&lt;p&gt;For example, Python&amp;rsquo;s &lt;code&gt;async / await&lt;/code&gt; feature appeared only in Python 3.5 and later.&lt;/p&gt;</description></item><item><title>Pipenv Notes</title><link>https://klee1611.github.io/posts/pipenv-notes.html/</link><pubDate>Sun, 26 Sep 2021 18:34:23 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/pipenv-notes.html/</guid><description>&lt;h2 id="why-pipenv"&gt;Why Pipenv&lt;/h2&gt;
&lt;p&gt;When maintaining many Python projects,&lt;br&gt;
different projects might use different versions of the same Python libraries.&lt;br&gt;
Not using a virtual environment and installing all Python modules directly on your machine will lead to version conflicts.&lt;/p&gt;
&lt;p&gt;In the past, the mechanism of &lt;code&gt;virtualenv&lt;/code&gt; + &lt;code&gt;requirements.txt&lt;/code&gt; allowed different projects to use different versions of the same package,&lt;br&gt;
and also enabled new developers or production environments to quickly install the packages required by the project.&lt;/p&gt;</description></item><item><title>WSL 2 on Windows Part 2 - Terminal Interface Settings</title><link>https://klee1611.github.io/posts/wsl-2-on-windows-part-2.html/</link><pubDate>Sun, 11 Apr 2021 00:14:00 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/wsl-2-on-windows-part-2.html/</guid><description>&lt;p&gt;&lt;img
 class="lazyload"
 src="https://klee1611.github.io/svg/loading.min.svg"
 data-src="https://klee1611.github.io/images/wsl2_terminal_screenshot.png"
 data-srcset="https://klee1611.github.io/images/wsl2_terminal_screenshot.png, https://klee1611.github.io/images/wsl2_terminal_screenshot.png 1.5x, https://klee1611.github.io/images/wsl2_terminal_screenshot.png 2x"
 data-sizes="auto"
 alt="/images/wsl2_terminal_screenshot.png"
 title="wsl2_terminal_screenshot" /&gt;&lt;/p&gt;
&lt;p&gt;Bringing the terminal settings from Linux and Mac to Windows
for easier operation.&lt;/p&gt;
&lt;h2 id="windows-terminal-features"&gt;Windows Terminal Features&lt;/h2&gt;
&lt;p&gt;With Windows Terminal, you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Enable multiple tabs (quickly switch between multiple Linux CLIs, Windows CLIs, PowerShell, etc.)&lt;/li&gt;
&lt;li&gt;Customize key bindings (shortcuts for opening/closing tabs, copy/paste, etc.)&lt;/li&gt;
&lt;li&gt;Use search functionality&lt;/li&gt;
&lt;li&gt;Customize themes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These features offer much more than native WSL support,
and allow for a setup similar to my Linux or Mac development environments,
which is why I decided to use Windows Terminal.&lt;/p&gt;</description></item><item><title>WSL 2 on Windows Part 1 - Installation and Activation</title><link>https://klee1611.github.io/posts/wsl-2-on-windows-part-1.html/</link><pubDate>Sat, 10 Apr 2021 15:52:00 +0000</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/wsl-2-on-windows-part-1.html/</guid><description>&lt;p&gt;I&amp;rsquo;m used to using Linux or Mac terminals for work.&lt;br&gt;
I took some time to set up the WSL environment on my home PC to easily switch work environments.&lt;/p&gt;
&lt;h2 id="differences-between-wsl-2-and-wsl-1"&gt;Differences between WSL 2 and WSL 1&lt;/h2&gt;
&lt;p&gt;WSL 2 is based on Hyper-V and &lt;strong&gt;runs a full Linux kernel&lt;/strong&gt; in a virtual machine.&lt;br&gt;
WSL 1 is a simulation of Linux functionalities on the Windows system.&lt;br&gt;
Therefore, WSL 2 &lt;strong&gt;supports more native Linux features and system calls&lt;/strong&gt; than WSL 1.&lt;/p&gt;</description></item></channel></rss>