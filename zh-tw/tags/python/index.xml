<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Kourtney's Blog</title><link>https://klee1611.github.io/zh-tw/tags/python/</link><description>Recent content in Python on Kourtney's Blog</description><generator>Hugo</generator><language>zh-TW</language><managingEditor>kourtneylee1611@gmail.com (Kourtney Lee)</managingEditor><webMaster>kourtneylee1611@gmail.com (Kourtney Lee)</webMaster><lastBuildDate>Fri, 31 Oct 2025 16:17:18 +0800</lastBuildDate><atom:link href="https://klee1611.github.io/zh-tw/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Multiprocessing, Multithreading and Asyncio in Python Part 1 - Basic Concept</title><link>https://klee1611.github.io/zh-tw/posts/python-concurrency-parallelism-multiprocessing-multithreading-asyncio.html/</link><pubDate>Sat, 25 Oct 2025 10:39:27 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/zh-tw/posts/python-concurrency-parallelism-multiprocessing-multithreading-asyncio.html/</guid><description>&lt;p&gt;在 Python 3.4 之後出現了 &lt;code&gt;Asyncio&lt;/code&gt; 可以在特定情境下提升效能，&lt;br&gt;
結合之前已經有的 Multiprocessing 和 Multithreading，&lt;br&gt;
我整理了一下這三項技術適合的原理、差異和使用情境做了幾篇紀錄。&lt;br&gt;
這一篇先簡單介紹三者的基本概念和適用情境。&lt;/p&gt;</description></item><item><title>Pyenv Notes</title><link>https://klee1611.github.io/zh-tw/posts/pyenv-notes.html/</link><pubDate>Mon, 01 Nov 2021 18:48:33 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/zh-tw/posts/pyenv-notes.html/</guid><description>&lt;h3 id="pyenv-的功能和使用的原因"&gt;&lt;code&gt;pyenv&lt;/code&gt; 的功能和使用的原因&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pyenv&lt;/code&gt; 是用來在系統裡安裝各種不同版本的 python，&lt;/p&gt;
&lt;p&gt;並能夠方便的切換 python 版本的工具。&lt;/p&gt;
&lt;p&gt;當同時有不同 python 版本的專案需要開發或維護時，&lt;/p&gt;
&lt;p&gt;就會需要使用 &lt;code&gt;pyenv&lt;/code&gt; 來協助切換 python 的版本。&lt;/p&gt;</description></item><item><title>Python Coroutine Asyncio</title><link>https://klee1611.github.io/zh-tw/posts/python-coroutine-asyncio.html/</link><pubDate>Wed, 27 Oct 2021 16:39:27 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/zh-tw/posts/python-coroutine-asyncio.html/</guid><description>&lt;p&gt;在出現 &lt;code&gt;asyncio&lt;/code&gt; 前，&lt;br&gt;
當一隻 Python 程式有很多需要並行執行的 task，&lt;br&gt;
想要提升程式效能，&lt;br&gt;
只能選用 multiprocessing 或 threading；&lt;br&gt;
Python 3.4 之後又多出了 &lt;code&gt;asyncio&lt;/code&gt; 的選擇。&lt;br&gt;
&lt;code&gt;asyncio&lt;/code&gt; 可以用來撰寫 coroutines，&lt;br&gt;
並使用 event loop 並行執行 coroutines，&lt;br&gt;
減少程式不必要的等待時間以提升效能。&lt;/p&gt;</description></item><item><title>Pipenv Notes</title><link>https://klee1611.github.io/zh-tw/posts/pipenv-notes.html/</link><pubDate>Sun, 26 Sep 2021 18:34:23 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/zh-tw/posts/pipenv-notes.html/</guid><description>&lt;h2 id="why-pipenv"&gt;Why Pipenv&lt;/h2&gt;
&lt;p&gt;當有很多 Python project 要維護，&lt;br&gt;
不同的 project 有可能使用相同的 python libraries 的不同版本，&lt;br&gt;
不使用 virtual environment 而將所有的 python modules 都裝在自己的機器上就會造成版本衝突。&lt;/p&gt;
&lt;p&gt;過去使用 &lt;code&gt;virtualenv&lt;/code&gt; + &lt;code&gt;requirement.txt&lt;/code&gt; 的機制可以在不同的 project 使用同一個套件的不同版本，&lt;br&gt;
也能夠讓新加入的開發者或 production 環境可以快速安裝 project 需要的套件，&lt;/p&gt;</description></item></channel></rss>