<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Coroutine on Kourtney's Blog</title><link>https://klee1611.github.io/zh-tw/tags/coroutine/</link><description>Recent content in Coroutine on Kourtney's Blog</description><generator>Hugo</generator><language>zh-TW</language><managingEditor>kourtneylee1611@gmail.com (Kourtney Lee)</managingEditor><webMaster>kourtneylee1611@gmail.com (Kourtney Lee)</webMaster><lastBuildDate>Fri, 31 Oct 2025 16:17:18 +0800</lastBuildDate><atom:link href="https://klee1611.github.io/zh-tw/tags/coroutine/index.xml" rel="self" type="application/rss+xml"/><item><title>Multiprocessing, Multithreading and Asyncio in Python Part 1 - Basic Concept</title><link>https://klee1611.github.io/zh-tw/posts/python-concurrency-parallelism-multiprocessing-multithreading-asyncio.html/</link><pubDate>Sat, 25 Oct 2025 10:39:27 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/zh-tw/posts/python-concurrency-parallelism-multiprocessing-multithreading-asyncio.html/</guid><description>&lt;p&gt;在 Python 3.4 之後出現了 &lt;code&gt;Asyncio&lt;/code&gt; 可以在特定情境下提升效能，&lt;br&gt;
結合之前已經有的 Multiprocessing 和 Multithreading，&lt;br&gt;
我整理了一下這三項技術適合的原理、差異和使用情境做了幾篇紀錄。&lt;br&gt;
這一篇先簡單介紹三者的基本概念和適用情境。&lt;/p&gt;</description></item></channel></rss>