<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Develop environment - 分類 - Kourtney&#39;s Blog</title>
        <link>http://example.org/zh-tw/categories/develop-environment/</link>
        <description>Develop environment - 分類 - Kourtney&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><managingEditor>kourtneylee1611@gmail.com (Kourtney Lee)</managingEditor>
            <webMaster>kourtneylee1611@gmail.com (Kourtney Lee)</webMaster><lastBuildDate>Sun, 11 Apr 2021 00:14:00 &#43;0000</lastBuildDate><atom:link href="http://example.org/zh-tw/categories/develop-environment/" rel="self" type="application/rss+xml" /><item>
    <title>WSL 2 on Windows Part 2 - Terminal 介面設定</title>
    <link>http://example.org/zh-tw/posts/wsl-2-on-windows-part-2.html/</link>
    <pubDate>Sun, 11 Apr 2021 00:14:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://example.org/zh-tw/posts/wsl-2-on-windows-part-2.html/</guid>
    <description><![CDATA[把在 Linux 和 Mac 上 terminal 的設定也搬到 Windows 上， 方便操作。
## Windows Terminal 功能 用 Windows terminal 可以 * 啟用多個分頁 (在多個 Linux CLI、Windows CLI、PowerShell等之間快速切換)
 自訂按鍵 (開啟或關閉分頁、複製+貼上等快速鍵) 使用搜尋功能 自訂佈景主題  這些功能比原生 WSL 能支援的多的多， 也可以設定的和我在 Linux 或 Mac 的開發環境比較相似，
於是就決定選用 windows terminal 了。 ## Windows terminal 設定 到 Microsoft store 搜尋 Windows terminal 並安裝完成後，
就可以開始設定 Windows terminal。
將 WSL 設定為 Windows terminal 預設開啟環境  在 windows terminal 的 [V] 箭頭選單選擇&quot;設定(settings)&quot;，
會出現一個 JSON 檔可以修改，]]></description>
</item><item>
    <title>WSL 2 on Windows Part 1 - 安裝啟用</title>
    <link>http://example.org/zh-tw/posts/wsl-2-on-windows-part-1.html/</link>
    <pubDate>Sat, 10 Apr 2021 15:52:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://example.org/zh-tw/posts/wsl-2-on-windows-part-1.html/</guid>
    <description><![CDATA[工作的時候習慣用 Linux 或 mac 的 terminal，
找了個時間在家裡的 PC 上把 WSL 的環境也設定一下方便切換工作環境。 WSL 2 和 WSL 1 的差異 WSL 2 是基於 Hyper-V 在 virtual machine 中跑完整的 Linux kernal，
WSL 1 則是在 Windows 系統上對 Linux 功能的模擬，
因此 WSL 2 比 WSL 1 支援更多 Linux 原生的功能和 system call。
如果需要用到 Linux 底層的應用，
WSL 2 支援的能力比 WSL 1 更好。
一般情況下 WSL 2 啟動 process 的效能也更好，
但需要讀取 host 系統的檔案時除外。
但因為 WSL 2 是在 VM 上跑 Linux kernal，]]></description>
</item></channel>
</rss>
