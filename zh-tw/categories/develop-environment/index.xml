<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Develop Environment on Kourtney's Blog</title><link>https://klee1611.github.io/zh-tw/categories/develop-environment/</link><description>Recent content in Develop Environment on Kourtney's Blog</description><generator>Hugo</generator><language>zh-TW</language><managingEditor>kourtneylee1611@gmail.com (Kourtney Lee)</managingEditor><webMaster>kourtneylee1611@gmail.com (Kourtney Lee)</webMaster><lastBuildDate>Fri, 31 Oct 2025 16:17:18 +0800</lastBuildDate><atom:link href="https://klee1611.github.io/zh-tw/categories/develop-environment/index.xml" rel="self" type="application/rss+xml"/><item><title>Managing Pre-existing Global NPM Packages After Installing NVM</title><link>https://klee1611.github.io/zh-tw/posts/managing-pre-exist-global-npm-packages-after-installing-nvm.html/</link><pubDate>Sat, 06 Nov 2021 19:31:32 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/zh-tw/posts/managing-pre-exist-global-npm-packages-after-installing-nvm.html/</guid><description>&lt;p&gt;今天遇到一個問題，&lt;/p&gt;
&lt;p&gt;安裝過 &lt;code&gt;nvm&lt;/code&gt; 後安裝 global package 的路徑就被改變了，&lt;/p&gt;
&lt;p&gt;導致想要移除之前安裝過的 global package 時沒辦法直接用 &lt;code&gt;npm uninstall -g&lt;/code&gt; 移除。&lt;/p&gt;
&lt;p&gt;怎麼發現這件事的呢？&lt;/p&gt;
&lt;p&gt;很久以前我在 global 裝過一個 package 可以直接在 terminal 呼叫 command 執行，&lt;/p&gt;</description></item><item><title>Pyenv Notes</title><link>https://klee1611.github.io/zh-tw/posts/pyenv-notes.html/</link><pubDate>Mon, 01 Nov 2021 18:48:33 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/zh-tw/posts/pyenv-notes.html/</guid><description>&lt;h3 id="pyenv-的功能和使用的原因"&gt;&lt;code&gt;pyenv&lt;/code&gt; 的功能和使用的原因&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pyenv&lt;/code&gt; 是用來在系統裡安裝各種不同版本的 python，&lt;/p&gt;
&lt;p&gt;並能夠方便的切換 python 版本的工具。&lt;/p&gt;
&lt;p&gt;當同時有不同 python 版本的專案需要開發或維護時，&lt;/p&gt;
&lt;p&gt;就會需要使用 &lt;code&gt;pyenv&lt;/code&gt; 來協助切換 python 的版本。&lt;/p&gt;</description></item><item><title>Pipenv Notes</title><link>https://klee1611.github.io/zh-tw/posts/pipenv-notes.html/</link><pubDate>Sun, 26 Sep 2021 18:34:23 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/zh-tw/posts/pipenv-notes.html/</guid><description>&lt;h2 id="why-pipenv"&gt;Why Pipenv&lt;/h2&gt;
&lt;p&gt;當有很多 Python project 要維護，&lt;br&gt;
不同的 project 有可能使用相同的 python libraries 的不同版本，&lt;br&gt;
不使用 virtual environment 而將所有的 python modules 都裝在自己的機器上就會造成版本衝突。&lt;/p&gt;
&lt;p&gt;過去使用 &lt;code&gt;virtualenv&lt;/code&gt; + &lt;code&gt;requirement.txt&lt;/code&gt; 的機制可以在不同的 project 使用同一個套件的不同版本，&lt;br&gt;
也能夠讓新加入的開發者或 production 環境可以快速安裝 project 需要的套件，&lt;/p&gt;</description></item><item><title>WSL 2 on Windows Part 2 - Terminal 介面設定</title><link>https://klee1611.github.io/zh-tw/posts/wsl-2-on-windows-part-2.html/</link><pubDate>Sun, 11 Apr 2021 00:14:00 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/zh-tw/posts/wsl-2-on-windows-part-2.html/</guid><description>&lt;p&gt;&lt;img
 class="lazyload"
 src="https://klee1611.github.io/svg/loading.min.svg"
 data-src="https://klee1611.github.io/images/wsl2_terminal_screenshot.png"
 data-srcset="https://klee1611.github.io/images/wsl2_terminal_screenshot.png, https://klee1611.github.io/images/wsl2_terminal_screenshot.png 1.5x, https://klee1611.github.io/images/wsl2_terminal_screenshot.png 2x"
 data-sizes="auto"
 alt="/images/wsl2_terminal_screenshot.png"
 title="wsl2_terminal_screenshot" /&gt;&lt;/p&gt;
&lt;p&gt;把在 Linux 和 Mac 上 terminal 的設定也搬到 Windows 上，&lt;br&gt;
方便操作。&lt;/p&gt;
&lt;h2 id="windows-terminal-功能"&gt;Windows Terminal 功能&lt;/h2&gt;
&lt;p&gt;用 Windows terminal 可以&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;啟用多個分頁 (在多個 Linux CLI、Windows CLI、PowerShell等之間快速切換)&lt;/li&gt;
&lt;li&gt;自訂按鍵 (開啟或關閉分頁、複製+貼上等快速鍵)&lt;/li&gt;
&lt;li&gt;使用搜尋功能&lt;/li&gt;
&lt;li&gt;自訂佈景主題&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這些功能比原生 WSL 能支援的多的多，&lt;br&gt;
也可以設定的和我在 Linux 或 Mac 的開發環境比較相似，&lt;br&gt;
於是就決定選用 windows terminal 了。&lt;/p&gt;</description></item><item><title>WSL 2 on Windows Part 1 - 安裝啟用</title><link>https://klee1611.github.io/zh-tw/posts/wsl-2-on-windows-part-1.html/</link><pubDate>Sat, 10 Apr 2021 15:52:00 +0000</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/zh-tw/posts/wsl-2-on-windows-part-1.html/</guid><description>&lt;p&gt;工作的時候習慣用 Linux 或 mac 的 terminal，&lt;br&gt;
找了個時間在家裡的 PC 上把 WSL 的環境也設定一下方便切換工作環境。  &lt;/p&gt;
&lt;h2 id="wsl-2-和-wsl-1-的差異"&gt;WSL 2 和 WSL 1 的差異&lt;/h2&gt;
&lt;p&gt;WSL 2 是基於 Hyper-V 在 virtual machine 中&lt;strong&gt;跑完整的 Linux kernal&lt;/strong&gt;，&lt;br&gt;
WSL 1 則是在 Windows 系統上對 Linux 功能的模擬，&lt;br&gt;
因此 WSL 2 比 WSL 1 &lt;strong&gt;支援更多 Linux 原生的功能和 system call&lt;/strong&gt;。&lt;/p&gt;</description></item></channel></rss>