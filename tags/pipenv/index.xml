<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pipenv on Kourtney's Blog</title><link>https://klee1611.github.io/tags/pipenv/</link><description>Recent content in Pipenv on Kourtney's Blog</description><generator>Hugo</generator><language>en</language><managingEditor>kourtneylee1611@gmail.com (Kourtney Lee)</managingEditor><webMaster>kourtneylee1611@gmail.com (Kourtney Lee)</webMaster><lastBuildDate>Fri, 31 Oct 2025 16:17:18 +0800</lastBuildDate><atom:link href="https://klee1611.github.io/tags/pipenv/index.xml" rel="self" type="application/rss+xml"/><item><title>Pipenv Notes</title><link>https://klee1611.github.io/posts/pipenv-notes.html/</link><pubDate>Sun, 26 Sep 2021 18:34:23 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/pipenv-notes.html/</guid><description>&lt;h2 id="why-pipenv"&gt;Why Pipenv&lt;/h2&gt;
&lt;p&gt;When maintaining many Python projects,&lt;br&gt;
different projects might use different versions of the same Python libraries.&lt;br&gt;
Not using a virtual environment and installing all Python modules directly on your machine will lead to version conflicts.&lt;/p&gt;
&lt;p&gt;In the past, the mechanism of &lt;code&gt;virtualenv&lt;/code&gt; + &lt;code&gt;requirements.txt&lt;/code&gt; allowed different projects to use different versions of the same package,&lt;br&gt;
and also enabled new developers or production environments to quickly install the packages required by the project.&lt;/p&gt;</description></item></channel></rss>