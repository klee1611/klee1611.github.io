<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Kourtney's Blog</title><link>https://klee1611.github.io/tags/python/</link><description>Recent content in Python on Kourtney's Blog</description><generator>Hugo</generator><language>en</language><managingEditor>kourtneylee1611@gmail.com (Kourtney Lee)</managingEditor><webMaster>kourtneylee1611@gmail.com (Kourtney Lee)</webMaster><lastBuildDate>Fri, 31 Oct 2025 16:17:18 +0800</lastBuildDate><atom:link href="https://klee1611.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Multiprocessing, Multithreading and Asyncio in Python Part 1 - Basic Concept</title><link>https://klee1611.github.io/posts/python-concurrency-parallelism-multiprocessing-multithreading-asyncio.html/</link><pubDate>Sat, 25 Oct 2025 10:39:27 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/python-concurrency-parallelism-multiprocessing-multithreading-asyncio.html/</guid><description>&lt;p&gt;After Python 3.4,&lt;br&gt;
&lt;code&gt;Asyncio&lt;/code&gt; emerged,&lt;br&gt;
which can improve performance in specific scenarios.&lt;br&gt;
Combined with the pre-existing Multiprocessing and Multithreading,&lt;br&gt;
I have compiled a few records on the principles, differences, and use cases for these three technologies.&lt;br&gt;
This first post will briefly introduce the basic concepts and suitable scenarios for each of the three.&lt;/p&gt;</description></item><item><title>Pyenv Notes</title><link>https://klee1611.github.io/posts/pyenv-notes.html/</link><pubDate>Mon, 01 Nov 2021 18:48:33 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/pyenv-notes.html/</guid><description>&lt;h3 id="functions-and-reasons-for-using-pyenv"&gt;Functions and Reasons for Using &lt;code&gt;pyenv&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pyenv&lt;/code&gt; is a tool used to install various versions of Python on a system,&lt;/p&gt;
&lt;p&gt;and to conveniently switch between Python versions.&lt;/p&gt;
&lt;p&gt;When you need to develop or maintain projects that require different Python versions simultaneously,&lt;/p&gt;
&lt;p&gt;you will need to use &lt;code&gt;pyenv&lt;/code&gt; to help switch Python versions.&lt;/p&gt;
&lt;p&gt;New Python versions usually include syntax updates or new features.&lt;/p&gt;
&lt;p&gt;For example, Python&amp;rsquo;s &lt;code&gt;async / await&lt;/code&gt; feature appeared only in Python 3.5 and later.&lt;/p&gt;</description></item><item><title>Python Coroutine Asyncio</title><link>https://klee1611.github.io/posts/python-coroutine-asyncio.html/</link><pubDate>Wed, 27 Oct 2021 16:39:27 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/python-coroutine-asyncio.html/</guid><description>&lt;p&gt;Before the advent of &lt;code&gt;asyncio&lt;/code&gt;,&lt;br&gt;
when a Python program had many tasks that needed to be executed concurrently,&lt;br&gt;
and wanted to improve program performance,&lt;br&gt;
the only options were multiprocessing or threading.&lt;br&gt;
After Python 3.4, &lt;code&gt;asyncio&lt;/code&gt; became another option.&lt;br&gt;
&lt;code&gt;asyncio&lt;/code&gt; can be used to write coroutines,&lt;br&gt;
and execute coroutines concurrently using an event loop,&lt;br&gt;
reducing unnecessary waiting time in the program to improve performance.&lt;/p&gt;</description></item><item><title>Pipenv Notes</title><link>https://klee1611.github.io/posts/pipenv-notes.html/</link><pubDate>Sun, 26 Sep 2021 18:34:23 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/pipenv-notes.html/</guid><description>&lt;h2 id="why-pipenv"&gt;Why Pipenv&lt;/h2&gt;
&lt;p&gt;When maintaining many Python projects,&lt;br&gt;
different projects might use different versions of the same Python libraries.&lt;br&gt;
Not using a virtual environment and installing all Python modules directly on your machine will lead to version conflicts.&lt;/p&gt;
&lt;p&gt;In the past, the mechanism of &lt;code&gt;virtualenv&lt;/code&gt; + &lt;code&gt;requirements.txt&lt;/code&gt; allowed different projects to use different versions of the same package,&lt;br&gt;
and also enabled new developers or production environments to quickly install the packages required by the project.&lt;/p&gt;</description></item></channel></rss>