<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - Kourtney's Blog</title><link>https://klee1611.github.io/posts/</link><description>All Posts | Kourtney's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>kourtneylee1611@gmail.com (Kourtney Lee)</managingEditor><webMaster>kourtneylee1611@gmail.com (Kourtney Lee)</webMaster><lastBuildDate>Sat, 25 Oct 2025 10:39:27 +0800</lastBuildDate><atom:link href="https://klee1611.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>Multiprocessing, Multithreading and Asyncio in Python Part 1 - Basic Concept</title><link>https://klee1611.github.io/posts/python-concurrency-parallelism-multiprocessing-multithreading-asyncio.html/</link><pubDate>Sat, 25 Oct 2025 10:39:27 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/python-concurrency-parallelism-multiprocessing-multithreading-asyncio.html/</guid><description><![CDATA[<p>After Python 3.4,<br>
<code>Asyncio</code> emerged,<br>
which can improve performance in specific scenarios.<br>
Combined with the pre-existing Multiprocessing and Multithreading,<br>
I have compiled a few records on the principles, differences, and use cases for these three technologies.<br>
This first post will briefly introduce the basic concepts and suitable scenarios for each of the three.</p>]]></description></item><item><title>Sync Obsidian / Joplin Data Across Multiple Devices with Synology WebDAV</title><link>https://klee1611.github.io/posts/sync-obsidian-joplin-data-across-multiple-device-synology-webdav.html/</link><pubDate>Wed, 25 Dec 2024 20:40:00 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/sync-obsidian-joplin-data-across-multiple-device-synology-webdav.html/</guid><description><![CDATA[<p>I originally used Notion as my note-taking software.<br>
It&rsquo;s feature-rich and has a beautiful interface.<br>
However, a few years ago, a privacy controversy arose around Notion,<br>
accusing them of looking at a company&rsquo;s content stored in Notion,<br>
and even proposing a partnership based on that information.<br>
So, I switched to <a href="https://joplinapp.org/" target="_blank" rel="noopener noreffer ">Joplin</a> for a while,<br>
but eventually moved to <a href="https://obsidian.md/" target="_blank" rel="noopener noreffer ">Obsidian</a>, which has a large number of plugins, strong community support, and is highly customizable.</p>]]></description></item><item><title>Managing Pre-existing Global NPM Packages After Installing NVM</title><link>https://klee1611.github.io/posts/managing-pre-exist-global-npm-packages-after-installing-nvm.html/</link><pubDate>Sat, 06 Nov 2021 19:31:32 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/managing-pre-exist-global-npm-packages-after-installing-nvm.html/</guid><description><![CDATA[<p>Today I encountered a problem:</p>
<p>After installing <code>nvm</code>, the path for installing global packages changed,</p>
<p>making it impossible to directly remove previously installed global packages using <code>npm uninstall -g</code>.</p>
<p>How did I discover this?</p>
<p>A long time ago, I installed a global package that could be executed directly from the terminal using a command.</p>
<p>But because it was so long ago,</p>
<p>when I tried to upgrade that package, I found it wasn&rsquo;t listed in <code>npm list -g</code>.</p>]]></description></item><item><title>Pyenv Notes</title><link>https://klee1611.github.io/posts/pyenv-notes.html/</link><pubDate>Mon, 01 Nov 2021 18:48:33 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/pyenv-notes.html/</guid><description><![CDATA[<h3 id="functions-and-reasons-for-using-pyenv">Functions and Reasons for Using <code>pyenv</code></h3>
<p><code>pyenv</code> is a tool used to install various versions of Python on a system,</p>
<p>and to conveniently switch between Python versions.</p>
<p>When you need to develop or maintain projects that require different Python versions simultaneously,</p>
<p>you will need to use <code>pyenv</code> to help switch Python versions.</p>
<p>New Python versions usually include syntax updates or new features.</p>
<p>For example, Python&rsquo;s <code>async / await</code> feature appeared only in Python 3.5 and later.</p>]]></description></item><item><title>Python Coroutine Asyncio</title><link>https://klee1611.github.io/posts/python-coroutine-asyncio.html/</link><pubDate>Wed, 27 Oct 2021 16:39:27 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/python-coroutine-asyncio.html/</guid><description><![CDATA[<p>Before the advent of <code>asyncio</code>,<br>
when a Python program had many tasks that needed to be executed concurrently,<br>
and wanted to improve program performance,<br>
the only options were multiprocessing or threading.<br>
After Python 3.4, <code>asyncio</code> became another option.<br>
<code>asyncio</code> can be used to write coroutines,<br>
and execute coroutines concurrently using an event loop,<br>
reducing unnecessary waiting time in the program to improve performance.</p>]]></description></item><item><title>Pipenv Notes</title><link>https://klee1611.github.io/posts/pipenv-notes.html/</link><pubDate>Sun, 26 Sep 2021 18:34:23 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/pipenv-notes.html/</guid><description><![CDATA[<h2 id="why-pipenv">Why Pipenv</h2>
<p>When maintaining many Python projects,<br>
different projects might use different versions of the same Python libraries.<br>
Not using a virtual environment and installing all Python modules directly on your machine will lead to version conflicts.</p>
<p>In the past, the mechanism of <code>virtualenv</code> + <code>requirements.txt</code> allowed different projects to use different versions of the same package,<br>
and also enabled new developers or production environments to quickly install the packages required by the project.</p>]]></description></item><item><title>Stateless HTTP, Stateful Session and Cookies</title><link>https://klee1611.github.io/posts/stateless-http-stateful-session-and-cookies.html/</link><pubDate>Mon, 28 Jun 2021 02:51:00 +0000</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/stateless-http-stateful-session-and-cookies.html/</guid><description><![CDATA[<h2 id="stateless-http">Stateless HTTP</h2>
<p>HTTP is a <strong>stateless protocol</strong>,<br>
meaning that <strong>each request/response is independent</strong>,<br>
and is unrelated to previous or subsequent requests/responses.<br>
The same request will always receive the same response,<br>
and will not differ based on the content of previous requests/responses.</p>
<p>This allows the server to save a large amount of database and server storage space because it doesn&rsquo;t need to store user information.<br>
It also speeds up response times and saves considerable network bandwidth because the client doesn&rsquo;t always have to connect to the same socket.</p>]]></description></item><item><title>WSL 2 on Windows Part 2 - Terminal Interface Settings</title><link>https://klee1611.github.io/posts/wsl-2-on-windows-part-2.html/</link><pubDate>Sun, 11 Apr 2021 00:14:00 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/wsl-2-on-windows-part-2.html/</guid><description><![CDATA[<p></p>
<p>Bringing the terminal settings from Linux and Mac to Windows
for easier operation.</p>
<h2 id="windows-terminal-features">Windows Terminal Features</h2>
<p>With Windows Terminal, you can:</p>
<ul>
<li>Enable multiple tabs (quickly switch between multiple Linux CLIs, Windows CLIs, PowerShell, etc.)</li>
<li>Customize key bindings (shortcuts for opening/closing tabs, copy/paste, etc.)</li>
<li>Use search functionality</li>
<li>Customize themes</li>
</ul>
<p>These features offer much more than native WSL support,
and allow for a setup similar to my Linux or Mac development environments,
which is why I decided to use Windows Terminal.</p>]]></description></item><item><title>WSL 2 on Windows Part 1 - Installation and Activation</title><link>https://klee1611.github.io/posts/wsl-2-on-windows-part-1.html/</link><pubDate>Sat, 10 Apr 2021 15:52:00 +0000</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/wsl-2-on-windows-part-1.html/</guid><description><![CDATA[<p>I&rsquo;m used to using Linux or Mac terminals for work.<br>
I took some time to set up the WSL environment on my home PC to easily switch work environments.</p>
<h2 id="differences-between-wsl-2-and-wsl-1">Differences between WSL 2 and WSL 1</h2>
<p>WSL 2 is based on Hyper-V and <strong>runs a full Linux kernel</strong> in a virtual machine.<br>
WSL 1 is a simulation of Linux functionalities on the Windows system.<br>
Therefore, WSL 2 <strong>supports more native Linux features and system calls</strong> than WSL 1.</p>]]></description></item><item><title>Deep Copy and Shallow Copy</title><link>https://klee1611.github.io/posts/deep-copy-shallow-copy.html/</link><pubDate>Tue, 21 Jan 2020 01:19:00 +0800</pubDate><author>kourtneylee1611@gmail.com (Kourtney Lee)</author><guid>https://klee1611.github.io/posts/deep-copy-shallow-copy.html/</guid><description><![CDATA[<h3 id="shallow-copy">Shallow Copy</h3>
<p>Copies as little as possible.<br>
A new structure created by a shallow copy has the same structure as the old one,<br>
and they <strong>share the memory address of elements</strong>.</p>
<p>For example, in Java:</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-java">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kt">int</span><span class="o">[]</span><span class="w"> </span><span class="n">arr1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">{</span><span class="n">1</span><span class="p">,</span><span class="w"> </span><span class="n">2</span><span class="p">,</span><span class="w"> </span><span class="n">3</span><span class="p">};</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kt">int</span><span class="o">[]</span><span class="w"> </span><span class="n">arr2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">arr1</span><span class="p">;</span></span></span></code></pre></div></div>
<p><code>arr2</code> is a shallow copy of <code>arr1</code>.</p>]]></description></item></channel></rss>